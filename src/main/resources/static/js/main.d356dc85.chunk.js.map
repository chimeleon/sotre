{"version":3,"sources":["styles/index.ts","components/AuthForm.tsx","components/AuthTemplate.tsx","hooks/useAuth.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["weight","InputGroup","styled","div","oc","gray","cyan","Input","input","teal","Button","button","AuthForm","id","password","onChange","onSubmit","type","name","value","required","className","onKeyPress","e","key","onClick","Container","createGlobalStyle","css","AuthTemplate","children","href","reducer","state","action","useAuth","useReducer","dispatch","useCallback","target","a","preventDefault","axios","post","params","then","res","document","location","catch","err","console","error","alert","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0JAoBuBA,E,6DCfjBC,EAAaC,IAAOC,IAAV,sgBAMHC,EAAGC,KAAK,GAeDD,EAAGE,KAAK,IAOtBC,EAAQL,IAAOM,MAAV,0UAEkBJ,EAAGE,KAAK,GAWxBF,EAAGK,KAAK,IAQfC,EAASR,IAAOS,OAAV,onBAaDP,EAAGE,KAAK,GACGF,EAAGE,KAAK,GAWZF,EAAGE,KAAK,IAmDXM,EApCmB,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,GAAIC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAS3D,OACE,qCACE,eAACf,EAAD,WACE,cAACM,EAAD,CAAOU,KAAK,OAAOC,KAAK,KAAKC,MAAON,EAAIE,SAAUA,EAAUK,UAAQ,IACpE,sBAAMC,UAAU,QAChB,0DAEF,eAACpB,EAAD,WACE,cAACM,EAAD,CACEU,KAAK,WACLC,KAAK,WACLC,MAAOL,EACPC,SAAUA,EACVO,WArBW,SACjBC,GAEc,UAAVA,EAAEC,KACJR,EAASO,IAkBLH,UAAQ,IAEV,sBAAMC,UAAU,QAChB,gEAEF,eAACX,EAAD,CAAQe,QAAST,EAAjB,UACE,qBAAKK,UAAU,QAAf,6CADF,4BCpHAK,GFJcC,YAAH,iQEICzB,IAAOC,IAAV,wmBFcQH,EEPZ,EFQO,CACd4B,YADc,iHAIdA,YAJc,iHAOdA,YAPc,mHAUdA,YAVc,8HAcdA,YAdc,8HAoBD5B,IE1BCI,EAAGE,KAAK,KAyCXuB,EAZuB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvC,OACE,eAACJ,EAAD,WACE,qBAAKL,UAAU,OAAf,SACE,mBAAGU,KAAK,IAAR,2BAGF,qBAAKV,UAAU,UAAf,SAA0BS,Q,iECtC1BE,EAAU,SAACC,EAAmBC,GAClC,OAAO,2BACFD,GADL,kBAEGC,EAAOhB,KAAOgB,EAAOf,SA2CXgB,MAvCf,WAAoB,IAAD,EACSC,qBAAWJ,EAAS,CAC5CnB,GAAI,GACJC,SAAU,KAHK,mBACVmB,EADU,KACHI,EADG,KAKTxB,EAAiBoB,EAAjBpB,GAAIC,EAAamB,EAAbnB,SAENC,EAAWuB,uBAAY,SAACf,GAC5Bc,EAASd,EAAEgB,UACV,IAsBH,MAAO,CACL1B,KACAC,WACAC,WACAC,SAxBY,uCAAG,WAAOO,GAAP,SAAAiB,EAAA,6DACfjB,EAAEkB,iBADa,kBAIPC,IACHC,KAAK,eAAgB,CACpBC,OAAQ,CACN/B,KACAC,cAGH+B,MAAK,SAACC,GACLC,SAASC,SAASjB,KAAO,OAE1BkB,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,MAdnB,sDAgBbG,MAAM,EAAD,IAhBQ,wDAAH,wDCZDC,MAff,WAAgB,IAAD,EACgCnB,IAArCtB,EADK,EACLA,GAAIC,EADC,EACDA,SAAUC,EADT,EACSA,SAAUC,EADnB,EACmBA,SAEhC,OACE,cAAC,EAAD,UACE,cAAC,EAAD,CACEH,GAAIA,EACJC,SAAUA,EACVC,SAAUA,EACVC,SAAUA,OCCHuC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCJdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlB,SAASmB,eAAe,SAM1BX,M","file":"static/js/main.d356dc85.chunk.js","sourcesContent":["import { createGlobalStyle, css } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: sans-serif;\n    box-sizing: border-box;\n  }\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n  \n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n`;\n\n// 그림자 효과: https://codepen.io/sdthornton/pen/wBZdXq 기반\nexport const shadow = (weight: number) => {\n  const shadows = [\n    css`\n      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n    `,\n    css`\n      box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n    `,\n    css`\n      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n    `,\n    css`\n      box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25),\n        0 10px 10px rgba(0, 0, 0, 0.22);\n    `,\n    css`\n      box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3),\n        0 15px 12px rgba(0, 0, 0, 0.22);\n    `,\n  ];\n\n  return shadows[weight];\n};\n\nexport default GlobalStyle;","import React from 'react';\nimport styled from 'styled-components';\nimport oc from 'open-color';\n\n// Styles\nconst InputGroup = styled.div`\n  position: relative;\n  width: 100%;\n  margin-bottom: 30px;\n  label {\n    position: absolute;\n    color: ${oc.gray[9]};\n    top: 12px;\n    left: 0;\n    transition: 0.2s ease all;\n  }\n  .bar {\n    position: relative;\n    display: block;\n    width: 100%;\n    &:before {\n      content: '';\n      position: absolute;\n      left: 50%;\n      right: 50%;\n      bottom: 0;\n      background: ${oc.cyan[8]};\n      height: 3px;\n      transition: left 0.2s ease-out, right 0.2s ease-out;\n    }\n  }\n`;\n\nconst Input = styled.input`\n  border: none;\n  border-bottom: 1px solid ${oc.cyan[6]};\n  padding: 10px;\n  display: block;\n  width: 92%;\n  &:focus {\n    outline: none;\n  }\n  &:focus ~ label,\n  &:valid ~ label {\n    top: -10px;\n    font-size: 14px;\n    color: ${oc.teal[6]};\n  }\n  &:focus ~ .bar:before {\n    left: 0;\n    right: 0;\n  }\n`;\n\nconst Button = styled.button`\n  position: relative;\n  display: block;\n  overflow: hidden;\n  width: 100%;\n  margin-top: 1rem;\n  padding-top: 0.6rem;\n  padding-bottom: 0.5rem;\n  font-size: 1.25rem;\n  font-weight: 600;\n  cursor: pointer;\n  user-select: none;\n  background: transparent;\n  color: ${oc.cyan[5]};\n  border: 1px solid ${oc.cyan[5]};\n  border-radius: 4px;\n  outline: none;\n  transition: all 0.5s ease;\n  .layer {\n    color: white;\n    position: absolute;\n    left: 0;\n    top: -70px;\n    width: 100%;\n    padding: 10px 0;\n    background: ${oc.cyan[5]};\n    transition: all 0.4s ease;\n  }\n  &:hover .layer {\n    top: 0;\n  }\n`;\n\ninterface Props {\n  id: string;\n  password: string;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onSubmit: (e: React.MouseEvent) => void;\n}\n\nconst AuthForm: React.FC<Props> = ({ id, password, onChange, onSubmit }) => {\n  const onKeyPress = (\n    e: React.KeyboardEvent<HTMLInputElement> & React.MouseEvent\n  ) => {\n    if (e.key === 'Enter') {\n      onSubmit(e);\n    }\n  };\n\n  return (\n    <>\n      <InputGroup>\n        <Input type=\"text\" name=\"id\" value={id} onChange={onChange} required />\n        <span className=\"bar\" />\n        <label>아이디</label>\n      </InputGroup>\n      <InputGroup>\n        <Input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={onChange}\n          onKeyPress={onKeyPress}\n          required\n        />\n        <span className=\"bar\" />\n        <label>비밀번호</label>\n      </InputGroup>\n      <Button onClick={onSubmit}>\n        <div className=\"layer\">어서오세요!</div>\n        로그인\n      </Button>\n    </>\n  );\n};\n\nexport default AuthForm;","import React from \"react\";\nimport styled from 'styled-components';\nimport oc from 'open-color';\nimport { shadow } from \"../styles\";\n\n// Styles\nconst Container = styled.div`\n  position: absolute;\n  width: 320px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  animation: 0.5s ease-out 0s 1 fadeIn;\n  ${shadow(1)};\n  .logo {\n    background: ${oc.cyan[5]};\n    height: 5rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    a {\n      color: white;\n      font-size: 2.4rem;\n      font-weight: 800;\n      text-decoration: none;\n    }\n  }\n  .content {\n    background: white;\n    padding: 2rem;\n    height: auto;\n  }\n  @keyframes fadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n`;\n\ninterface Props {}\n\nconst AuthTemplate: React.FC<Props> = ({ children }) => {\n  return (\n    <Container>\n      <div className=\"logo\">\n        <a href=\"/\">Force Point</a>\n      </div>\n\n      <div className=\"content\">{children}</div>\n    </Container>\n  );\n};\n\nexport default AuthTemplate;","import React, { useCallback, useReducer } from \"react\";\nimport axios from 'axios';\n\ninterface StateProps {\n  id: string;\n  password: string;\n}\n\ninterface ActionProps {\n  name: string;\n  value: string;\n}\n\nconst reducer = (state: StateProps, action: ActionProps) => {\n  return {\n    ...state,\n    [action.name]: action.value,\n  };\n};\n\nfunction useAuth() {\n  const [state, dispatch] = useReducer(reducer, {\n    id: '',\n    password: '',\n  });\n  const { id, password } = state;\n\n  const onChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(e.target);\n  }, []);\n\n  const onSubmit = async (e: React.MouseEvent) => {\n    e.preventDefault();\n\n    try {\n      await axios\n        .post('/customLogin', {\n          params: {\n            id,\n            password,\n          },\n        })\n        .then((res) => {\n          document.location.href = '/';\n        })\n        .catch((err) => console.error(err));\n    } catch (err) {\n      alert(err);\n    }\n  }\n\n  return {\n    id,\n    password,\n    onChange,\n    onSubmit,\n  };\n}\n\nexport default useAuth;","import AuthForm from \"./components/AuthForm\";\nimport AuthTemplate from \"./components/AuthTemplate\";\nimport useAuth from \"./hooks/useAuth\";\n\nfunction App() {\n  const { id, password, onChange, onSubmit } = useAuth();\n\n  return (\n    <AuthTemplate>\n      <AuthForm\n        id={id}\n        password={password}\n        onChange={onChange}\n        onSubmit={onSubmit}\n      />\n    </AuthTemplate>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}